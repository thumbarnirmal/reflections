What happens when you initialize a repository? Why do you need to do it?
	A .git folder is created which stores metadata. This is for git to keep
	data to track history of changes.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	Staging area comes in between working directory and repository. Files added
	to staging area can be commited in one go.

How can you use the staging area to make sure you have one commit per logical
change?
	I can add one logical change to staging area by using git add and then
	commit it. Then add other changes to staging area and commit them.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	If I want to try something new but also be able to retain what I currently
	have along with it git branch comes in handy.

How do the diagrams help you visualize the branch structure?
	Diagrams help to visualize the branch structures. They also provide info
	about which commits are reachable from which branch and also info about
	unreachable commits.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	On merging two branches all the changes in both branches will get assembled
	in one branch i.e. current checked out branch. It is represented in the
	way that best explains the logical flow of the changes.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
	Automatic merging might lead to redundancy in code. But it saves a lot of
	time. Whereas manual merging might lead to short and efficient code but
	could take a lot of time to understand code of all branches being merged.